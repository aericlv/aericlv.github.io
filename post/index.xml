<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Aeric Blog</title>
    <link>https://aeric.io/post/</link>
    <description>Recent content in Posts on Aeric Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 15 Jan 2019 17:43:22 +0800</lastBuildDate>
    
	<atom:link href="https://aeric.io/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>K8S 包管理工具 Helm - 应用</title>
      <link>https://aeric.io/post/k8s-helm-application/</link>
      <pubDate>Tue, 15 Jan 2019 17:43:22 +0800</pubDate>
      
      <guid>https://aeric.io/post/k8s-helm-application/</guid>
      <description>之前已经在 kubernetes 集群中已经安装了 Helm 和 Tiller，那么接下来我们需要熟悉一下 Helm 的基本应用，主要包括借助 Helm 创建、打包、分发、安装、升级及回滚 kubernetes 应用</description>
    </item>
    
    <item>
      <title>K8S 包管理工具 Helm - 安装</title>
      <link>https://aeric.io/post/k8s-helm-installation/</link>
      <pubDate>Tue, 15 Jan 2019 17:41:54 +0800</pubDate>
      
      <guid>https://aeric.io/post/k8s-helm-installation/</guid>
      <description>前期在 Kubernetes 集群中部署应用多少有点不适应，因为我们需要维护的资源配置清单 yaml 文件随着应用的增加，对应的文件也越来越多，这就在一定程度上导致了以下几</description>
    </item>
    
    <item>
      <title>K8S 包管理工具 Helm - 介绍</title>
      <link>https://aeric.io/post/k8s-helm-introduction/</link>
      <pubDate>Tue, 15 Jan 2019 17:41:40 +0800</pubDate>
      
      <guid>https://aeric.io/post/k8s-helm-introduction/</guid>
      <description>Helm 是 Kubernetes 生态系统中的一个软件包管理工具，Helm 是由 Deis 发起的一个开源工具，有助于简化部署和管理 Kubernetes 应用。 它有点类似于 Ubuntu 中的 APT 或 CentOS 中的 YUM Helm 官方网站</description>
    </item>
    
    <item>
      <title>mkcert:本地有效的https证书</title>
      <link>https://aeric.io/post/mkcert-valid-https-certificates-for-localhost/</link>
      <pubDate>Mon, 14 Jan 2019 20:30:33 +0800</pubDate>
      
      <guid>https://aeric.io/post/mkcert-valid-https-certificates-for-localhost/</guid>
      <description>随着 HTTPS 的越来越普及，现在绝大数的 WEB 网站已经支持了全站 HTTPS，来防止网络攻击者观察或注入页面内容等，这里介绍一种在本地生成 TLS 证书的工具: mkcert</description>
    </item>
    
    <item>
      <title>Mesos集群二进制方式部署二 </title>
      <link>https://aeric.io/post/mesos-cluster-installation-b/</link>
      <pubDate>Sat, 12 Jan 2019 20:44:13 +0800</pubDate>
      
      <guid>https://aeric.io/post/mesos-cluster-installation-b/</guid>
      <description>本次部署基于 Zookeeper+Mesos+Marathon+Docker，具体部署环境如下： mesos-master1 172.16.8.120 mesos+zookeeper+marathon mesos-master2 172.16.8.121 mesos+zookeeper+marathon mesos-master3 172.16.8.122 mesos+zookeeper+marathon mesos-slave1 172.16.8.110 mesos+docker 上述所有机器系统版本如</description>
    </item>
    
    <item>
      <title>Mesos集群二进制方式部署一</title>
      <link>https://aeric.io/post/mesos-cluster-installation-a/</link>
      <pubDate>Sat, 12 Jan 2019 20:43:44 +0800</pubDate>
      
      <guid>https://aeric.io/post/mesos-cluster-installation-a/</guid>
      <description>私有化 PaaS 平台主要由 Zookeeper、Mesos、Marathon 和 Docker 几个组件构成，各组件用途及扮演的角色信息如下所示： Zookeeper: Zookeeper 是一个分布式的，</description>
    </item>
    
    <item>
      <title>记一次harbor的升级之旅</title>
      <link>https://aeric.io/post/harbor-upgrade-guide/</link>
      <pubDate>Thu, 10 Jan 2019 14:37:01 +0800</pubDate>
      
      <guid>https://aeric.io/post/harbor-upgrade-guide/</guid>
      <description>之前安装的 harbor版本是 v1.6的版本，由于在 v1.7版本中新增加了对 helm的支持，所以为了更充分的利用 harbor 镜像仓库，我们将进行一次升级</description>
    </item>
    
    <item>
      <title>Kubernetes集群安装Metrics Server</title>
      <link>https://aeric.io/post/k8s-metrics-server-installation/</link>
      <pubDate>Fri, 04 Jan 2019 12:23:36 +0800</pubDate>
      
      <guid>https://aeric.io/post/k8s-metrics-server-installation/</guid>
      <description>Kubernetes 1.8 关于资源使用情况的 metrics，可以通过 Metrics API 获取到 Kubernetes 1.11 已经废弃 heapster。这里我们基于 Kubernetes 1.12 版本安装 Metrics Server。 Metrics Server 的安装 首先</description>
    </item>
    
    <item>
      <title>容器化部署 Mesos 集群</title>
      <link>https://aeric.io/post/mesos-container-cluster-installation/</link>
      <pubDate>Thu, 06 Dec 2018 16:34:08 +0800</pubDate>
      
      <guid>https://aeric.io/post/mesos-container-cluster-installation/</guid>
      <description>整个 mesos 集群主要由 Zookeeper、Mesos、Marathon 和 Docker 几个组件构成，各组件用途及扮演的角色信息如下所示： Zookeeper: Zookeeper 是一个分布式的，开</description>
    </item>
    
    <item>
      <title>Linux 配置 RabbitMQ 集群</title>
      <link>https://aeric.io/post/rabbitmq-cluster-installation/</link>
      <pubDate>Sun, 02 Dec 2018 16:48:15 +0800</pubDate>
      
      <guid>https://aeric.io/post/rabbitmq-cluster-installation/</guid>
      <description>一般情况下，如果只是为了探究 RabbitMQ 或者验证业务工程的正确性那么在本地环境或者测试环境上使用其单实例部署就可以了，但是出于 MQ 中间件本身的可靠性、并</description>
    </item>
    
    <item>
      <title>Linux 配置 RabbitMQ 服务</title>
      <link>https://aeric.io/post/rabbitmq-single-installation/</link>
      <pubDate>Sun, 02 Dec 2018 16:47:46 +0800</pubDate>
      
      <guid>https://aeric.io/post/rabbitmq-single-installation/</guid>
      <description>RabbitMQ 是由 LShift 提供的一个 Advanced Message Queuing Protocol (AMQP) 的开源实现，由以高性能、健壮以及可伸缩性出名的 Erlang 开发设计，因此也是继承了这些优点。 本文档旨在基于 Erlang 环境在 CentOS 7 系统</description>
    </item>
    
    <item>
      <title>RabbitMQ Erlang 环境配置</title>
      <link>https://aeric.io/post/rabbitmq-erlang-installation/</link>
      <pubDate>Sun, 02 Dec 2018 16:46:51 +0800</pubDate>
      
      <guid>https://aeric.io/post/rabbitmq-erlang-installation/</guid>
      <description>Erlang 是一种多用途编程语言，主要用于开发并发和分布式系统。它最初是一种专有的编程语言，Ericsson 使用它来开发电话和通信应用程序。 本文档旨在</description>
    </item>
    
    <item>
      <title>Kubernetes 集群创建 TLS 证书及密钥</title>
      <link>https://aeric.io/post/k8s-create-tls-and-keys/</link>
      <pubDate>Fri, 30 Nov 2018 14:05:14 +0800</pubDate>
      
      <guid>https://aeric.io/post/k8s-create-tls-and-keys/</guid>
      <description>集群环境如下： k8s-master: 192.168.8.66 k8s-nodes: 192.168.8.67 192.168.8.68 k8s-harbor: 192.168.8.69 创建TLS证书及密钥 kubernetes系统的各组件需要使用 TLS 证书对通信进行加密，本文档使用 CloudFlare 的 PKI 工具集 cfssl 来生成</description>
    </item>
    
  </channel>
</rss>